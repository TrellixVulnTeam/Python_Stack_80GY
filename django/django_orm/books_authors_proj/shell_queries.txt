Last login: Wed Jul 14 21:03:59 on ttys000

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
MacBook-Pro:py3Env tim$ pwd
/Users/tim/Documents/GitHub/Python_Stack/my_environments/py3Env
MacBook-Pro:py3Env tim$ cd ..
MacBook-Pro:my_environments tim$ source git_Django/bin/activate
(git_Django) MacBook-Pro:my_environments tim$ cd ..
(git_Django) MacBook-Pro:Python_Stack tim$ ls
__pycache__	django		my_environments	pyproject.toml
_python		main.py		poetry.lock
(git_Django) MacBook-Pro:Python_Stack tim$ cd django/django_orm/
(git_Django) MacBook-Pro:django_orm tim$ ls
(git_Django) MacBook-Pro:django_orm tim$ django-admin startproject books_authors_proj
(git_Django) MacBook-Pro:django_orm tim$ ls
books_authors_proj
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py startapp books_authors_app
(git_Django) MacBook-Pro:books_authors_proj tim$ code .
(git_Django) MacBook-Pro:books_authors_proj tim$ 
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py makemigrations
Traceback (most recent call last):
  File "/Users/tim/Documents/GitHub/Python_Stack/django/django_orm/books_authors_proj/manage.py", line 21, in <module>
    main()
  File "/Users/tim/Documents/GitHub/Python_Stack/django/django_orm/books_authors_proj/manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/core/management/__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/core/management/__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/core/management/base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/core/management/base.py", line 361, in execute
    self.check()
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/core/management/base.py", line 387, in check
    all_issues = self._run_checks(
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/core/management/base.py", line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/core/checks/registry.py", line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/utils/functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/urls/resolvers.py", line 571, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/utils/functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/urls/resolvers.py", line 564, in urlconf_module
    return import_module(self.urlconf_name)
  File "/usr/local/Cellar/python@3.9/3.9.2_4/Frameworks/Python.framework/Versions/3.9/lib/python3.9/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 986, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 680, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/tim/Documents/GitHub/Python_Stack/django/django_orm/books_authors_proj/books_authors_proj/urls.py", line 19, in <module>
    urlpatterns = [path("", include('survey_app.urls')),]
  File "/Users/tim/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/usr/local/Cellar/python@3.9/3.9.2_4/Frameworks/Python.framework/Versions/3.9/lib/python3.9/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 972, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 984, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'survey_app'
(git_Django) MacBook-Pro:books_authors_proj tim$ pwd
/Users/tim/Documents/GitHub/Python_Stack/django/django_orm/books_authors_proj
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py makemigrations
Migrations for 'books_authors_app':
  books_authors_app/migrations/0001_initial.py
    - Create model BOOK
    - Create model AUTHOR
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying books_authors_app.0001_initial... OK
  Applying sessions.0001_initial... OK
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
July 18, 2021 - 22:58:40
Django version 2.2, using settings 'books_authors_proj.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.
python manage.py shell
[18/Jul/2021 22:59:08] "GET / HTTP/1.1" 200 267
Not Found: /favicon.ico
[18/Jul/2021 22:59:09] "GET /favicon.ico HTTP/1.1" 404 2025
Not Found: /apple-touch-icon-precomposed.png
[18/Jul/2021 22:59:09] "GET /apple-touch-icon-precomposed.png HTTP/1.1" 404 2088
Not Found: /apple-touch-icon.png
[18/Jul/2021 22:59:09] "GET /apple-touch-icon.png HTTP/1.1" 404 2052
^C(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
Python 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app import *

In [2]: BOOKS.onjects.create(title="C Sharp", description="Book about C Sharp")
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-2-0ee004e97b6b> in <module>
----> 1 BOOKS.onjects.create(title="C Sharp", description="Book about C Sharp")

NameError: name 'BOOKS' is not defined

In [3]: BOOK.objects.create(title="C Sharp", description="Book about C Sharp")
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-3-ce206fbca1f2> in <module>
----> 1 BOOK.objects.create(title="C Sharp", description="Book about C Sharp")

NameError: name 'BOOK' is not defined

In [4]: from books_authors_app import *

In [5]: from books_authors_app.models import *

In [6]: BOOK.objects.create(title="C Sharp", description="Book about C Sharp")
Out[6]: <BOOK: BOOK object (1)>

In [7]: BOOK.objects.create(title="Java", description="Book about Java")
Out[7]: <BOOK: BOOK object (2)>

In [8]: BOOK.objects.create(title="Python", description="Book about Python")
Out[8]: <BOOK: BOOK object (3)>

In [9]: BOOK.objects.create(title="PHP", description="Book about PHP")
Out[9]: <BOOK: BOOK object (4)>

In [10]: BOOK.objects.create(title="Ruby", description="Book about Ruby")
Out[10]: <BOOK: BOOK object (5)>

In [11]: AUTHOR.objects.create(first_name="Jane", last_name="Austen", description="")
Out[11]: <AUTHOR: AUTHOR object (1)>

In [12]: AUTHOR.objects.create(first_name="Emily", last_name="Dickinson", description="")
Out[12]: <AUTHOR: AUTHOR object (2)>

In [13]: AUTHOR.objects.create(first_name="Fyodor", last_name="Dostoevsky", description="")
Out[13]: <AUTHOR: AUTHOR object (3)>

In [14]: AUTHOR.objects.create(first_name="William", last_name="Shakespeare", description="")
Out[14]: <AUTHOR: AUTHOR object (4)>

In [15]: AUTHOR.objects.create(first_name="Lau", last_name="Tzu", description="")
Out[15]: <AUTHOR: AUTHOR object (5)>

In [16]: quot
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-16-09e971941e2e> in <module>
----> 1 quot

NameError: name 'quot' is not defined

In [17]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py makemigrations
Did you rename author.description to author.notes (a TextField)? [y/N] y
Migrations for 'books_authors_app':
  books_authors_app/migrations/0002_auto_20210718_2319.py
    - Rename field description on author to notes
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  Applying books_authors_app.0002_auto_20210718_2319... OK
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
Python 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: c = BOOK.objects.get(id=1)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-a40eb957780f> in <module>
----> 1 c = BOOK.objects.get(id=1)

NameError: name 'BOOK' is not defined

In [2]: from books_authors_app.models import *

In [3]: c = BOOK.objects.get(id=1)

In [4]: c.title = "C#"

In [5]: c.save()

In [6]: c = AUTHOR.objects.get(id=4)

In [7]: c.first_name = "Bill"

In [8]: c.save()

In [9]: book1 = BOOK.objects.get(id=1)

In [10]: book2 = BOOK.objects.get(id=2)

In [11]: Author1 = AUTHOR.objects.get(id=1)

In [12]: Author1.Books.add(book1, book2)

In [13]: Author1.save()

In [14]: Author2 = AUTHOR.objects.get(id=2)

In [15]: book3 = BOOK.objects.get(id=3)

In [16]: Author2.Books.add(book1, book2, book3)

In [17]: Author2.save()

In [18]: Author3 = AUTHOR.objects.get(id=3)

In [19]: book4 = BOOK.objects.get(id=4)

In [20]: Author3.Books.add(book1, book2, book3, book4)

In [21]: Author3.save()

In [22]: Author4 = AUTHOR.objects.get(id=4)

In [23]: Author4.Books.add(BOOK.objects.all())
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-23-696f048259bb> in <module>
----> 1 Author4.Books.add(BOOK.objects.all())

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/fields/related_descriptors.py in add(self, through_defaults, *objs)
    961             db = router.db_for_write(self.through, instance=self.instance)
    962             with transaction.atomic(using=db, savepoint=False):
--> 963                 self._add_items(
    964                     self.source_field_name, self.target_field_name, *objs,
    965                     through_defaults=through_defaults,

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/fields/related_descriptors.py in _add_items(self, source_field_name, target_field_name, through_defaults, *objs)
   1086 
   1087                 db = router.db_for_write(self.through, instance=self.instance)
-> 1088                 vals = (self.through._default_manager.using(db)
   1089                         .values_list(target_field_name, flat=True)
   1090                         .filter(**{

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/query.py in filter(self, *args, **kwargs)
    890         set.
    891         """
--> 892         return self._filter_or_exclude(False, *args, **kwargs)
    893 
    894     def exclude(self, *args, **kwargs):

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/query.py in _filter_or_exclude(self, negate, *args, **kwargs)
    908             clone.query.add_q(~Q(*args, **kwargs))
    909         else:
--> 910             clone.query.add_q(Q(*args, **kwargs))
    911         return clone
    912 

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/sql/query.py in add_q(self, q_object)
   1288         # So, demotion is OK.
   1289         existing_inner = {a for a in self.alias_map if self.alias_map[a].join_type == INNER}
-> 1290         clause, _ = self._add_q(q_object, self.used_aliases)
   1291         if clause:
   1292             self.where.add(clause, AND)

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/sql/query.py in _add_q(self, q_object, used_aliases, branch_negated, current_negated, allow_joins, split_subq, simple_col)
   1313                 joinpromoter.add_votes(needed_inner)
   1314             else:
-> 1315                 child_clause, needed_inner = self.build_filter(
   1316                     child, can_reuse=used_aliases, branch_negated=branch_negated,
   1317                     current_negated=current_negated, allow_joins=allow_joins,

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/sql/query.py in build_filter(self, filter_expr, branch_negated, current_negated, can_reuse, allow_joins, split_subq, reuse_with_filtered_relation, simple_col)
   1249             col = _get_col(targets[0], join_info.final_field, alias, simple_col)
   1250 
-> 1251         condition = self.build_lookup(lookups, col, value)
   1252         lookup_type = condition.lookup_name
   1253         clause.add(condition, AND)

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/sql/query.py in build_lookup(self, lookups, lhs, rhs)
   1114                 return
   1115 
-> 1116         lookup = lookup_class(lhs, rhs)
   1117         # Interpret '__exact=None' as the sql 'is NULL'; otherwise, reject all
   1118         # uses of None as a query value unless the lookup supports it.

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/lookups.py in __init__(self, lhs, rhs)
     18     def __init__(self, lhs, rhs):
     19         self.lhs, self.rhs = lhs, rhs
---> 20         self.rhs = self.get_prep_lookup()
     21         if hasattr(self.lhs, 'get_bilateral_transforms'):
     22             bilateral_transforms = self.lhs.get_bilateral_transforms()

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/fields/related_lookups.py in get_prep_lookup(self)
     57                 # only one as we don't get to the direct value branch otherwise.
     58                 target_field = self.lhs.output_field.get_path_info()[-1].target_fields[-1]
---> 59                 self.rhs = [target_field.get_prep_value(v) for v in self.rhs]
     60         return super().get_prep_lookup()
     61 

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/fields/related_lookups.py in <listcomp>(.0)
     57                 # only one as we don't get to the direct value branch otherwise.
     58                 target_field = self.lhs.output_field.get_path_info()[-1].target_fields[-1]
---> 59                 self.rhs = [target_field.get_prep_value(v) for v in self.rhs]
     60         return super().get_prep_lookup()
     61 

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/django/db/models/fields/__init__.py in get_prep_value(self, value)
    964         if value is None or isinstance(value, OuterRef):
    965             return value
--> 966         return int(value)
    967 
    968     def contribute_to_class(self, cls, name, **kwargs):

TypeError: int() argument must be a string, a bytes-like object or a number, not 'QuerySet'

In [24]: book5 = BOOK.objects.get(id=5)

In [25]: Author4.Books.add(book1, book2, book3, book4, book5)

In [26]: Author4.save()

In [27]: book3.Authors
Out[27]: <django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager at 0x10ec4d940>

In [28]: book3.Authors()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-28-7e09f42672d2> in <module>
----> 1 book3.Authors()

TypeError: __call__() missing 1 required keyword-only argument: 'manager'

In [29]: print(book3.Authors)
books_authors_app.AUTHOR.None

In [30]: book3
Out[30]: <BOOK: BOOK object (3)>

In [31]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py makemigrations
No changes detected
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  No migrations to apply.
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
Python 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: BOOK.objects.get(id=3)
Out[2]: <BOOK object: Python, Book about Python, (3)>

In [3]: BOOK.objects.get(id=3)
Out[3]: <BOOK object: Python, Book about Python, (3)>

In [4]: from books_authors_app.models import *

In [5]: BOOK.objects.get(id=3)
Out[5]: <BOOK object: Python, Book about Python, (3)>

In [6]: quite
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-6-c70bc754f005> in <module>
----> 1 quite

NameError: name 'quite' is not defined

In [7]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py makemigrations
No changes detected
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  No migrations to apply.
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
^[[APython 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: BOOK.objects.get(id=3)
Out[2]: <BOOK object: Python, Book about Python, books_authors_app.AUTHOR.None,(3)>

In [3]: BOOK.objects.all()
Out[3]: <QuerySet [<BOOK object: C#, Book about C Sharp, books_authors_app.AUTHOR.None,(1)>, <BOOK object: Java, Book about Java, books_authors_app.AUTHOR.None,(2)>, <BOOK object: Python, Book about Python, books_authors_app.AUTHOR.None,(3)>, <BOOK object: PHP, Book about PHP, books_authors_app.AUTHOR.None,(4)>, <BOOK object: Ruby, Book about Ruby, books_authors_app.AUTHOR.None,(5)>]>

In [4]: AUTHOR.objects.all()
Out[4]: <QuerySet [<AUTHOR: AUTHOR object (1)>, <AUTHOR: AUTHOR object (2)>, <AUTHOR: AUTHOR object (3)>, <AUTHOR: AUTHOR object (4)>, <AUTHOR: AUTHOR object (5)>]>

In [5]: AUTHOR.objects.all()
Out[5]: <QuerySet [<AUTHOR: AUTHOR object (1)>, <AUTHOR: AUTHOR object (2)>, <AUTHOR: AUTHOR object (3)>, <AUTHOR: AUTHOR object (4)>, <AUTHOR: AUTHOR object (5)>]>

In [6]: from books_authors_app.models import *

In [7]: AUTHOR.objects.all()
Out[7]: <QuerySet [<AUTHOR: AUTHOR object (1)>, <AUTHOR: AUTHOR object (2)>, <AUTHOR: AUTHOR object (3)>, <AUTHOR: AUTHOR object (4)>, <AUTHOR: AUTHOR object (5)>]>

In [8]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
Python 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: AUTHOR.objects.all()
Out[2]: <QuerySet [< (id1) Author object: Jane, Austen, , books_authors_app.BOOK.None>, < (id2) Author object: Emily, Dickinson, , books_authors_app.BOOK.None>, < (id3) Author object: Fyodor, Dostoevsky, , books_authors_app.BOOK.None>, < (id4) Author object: Bill, Shakespeare, , books_authors_app.BOOK.None>, < (id5) Author object: Lau, Tzu, , books_authors_app.BOOK.None>]>

In [3]: AUTHor.objects.get(id=1).Books
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-3-39ad299cb46b> in <module>
----> 1 AUTHor.objects.get(id=1).Books

NameError: name 'AUTHor' is not defined

In [4]: AUTHOR.objects.get(id=1).Books
Out[4]: <django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager at 0x10fb7ac10>

In [5]: AUTHOR.objects.get(id=1).Books.all()
Out[5]: <QuerySet [<BOOK object: C#, Book about C Sharp, books_authors_app.AUTHOR.None,(1)>, <BOOK object: Java, Book about Java, books_authors_app.AUTHOR.None,(2)>]>

In [6]: AUTHOR.objects.get(id=5).Books.all()
Out[6]: <QuerySet []>

In [7]: AUTHOR.objects.get(id=4).Books.all()
Out[7]: <QuerySet [<BOOK object: C#, Book about C Sharp, books_authors_app.AUTHOR.None,(1)>, <BOOK object: Java, Book about Java, books_authors_app.AUTHOR.None,(2)>, <BOOK object: Python, Book about Python, books_authors_app.AUTHOR.None,(3)>, <BOOK object: PHP, Book about PHP, books_authors_app.AUTHOR.None,(4)>, <BOOK object: Ruby, Book about Ruby, books_authors_app.AUTHOR.None,(5)>]>

In [8]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
^[[APython 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: AUTHOR.objects.get(id=4)
Out[2]: < (id4) AUTHOR object: Bill, Shakespeare, , books_authors_app.BOOK.None>

In [3]: BOOK.objects.get(id=3)
Out[3]: ---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/IPython/core/formatters.py in __call__(self, obj)
    700                 type_pprinters=self.type_printers,
    701                 deferred_pprinters=self.deferred_printers)
--> 702             printer.pretty(obj)
    703             printer.flush()
    704             return stream.getvalue()

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/IPython/lib/pretty.py in pretty(self, obj)
    392                         if cls is not object \
    393                                 and callable(cls.__dict__.get('__repr__')):
--> 394                             return _repr_pprint(obj, self, cycle)
    395 
    396             return _default_pprint(obj, self, cycle)

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/IPython/lib/pretty.py in _repr_pprint(obj, p, cycle)
    698     """A pprint that just redirects to the normal repr function."""
    699     # Find newlines and replace them with p.break_()
--> 700     output = repr(obj)
    701     lines = output.splitlines()
    702     with p.group():

~/Documents/GitHub/Python_Stack/django/django_orm/books_authors_proj/books_authors_app/models.py in __repr__(self)
      9     def __repr__(self):
     10         authorsList = ""
---> 11         for eachAuthor in self.Authors:
     12             authorsList = authorsList + ", " + eachAuthor
     13 

TypeError: 'ManyRelatedManager' object is not iterable

In [4]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
^[[APython 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: BOOK.objects.get(id=3)
Out[2]: ---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/IPython/core/formatters.py in __call__(self, obj)
    700                 type_pprinters=self.type_printers,
    701                 deferred_pprinters=self.deferred_printers)
--> 702             printer.pretty(obj)
    703             printer.flush()
    704             return stream.getvalue()

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/IPython/lib/pretty.py in pretty(self, obj)
    392                         if cls is not object \
    393                                 and callable(cls.__dict__.get('__repr__')):
--> 394                             return _repr_pprint(obj, self, cycle)
    395 
    396             return _default_pprint(obj, self, cycle)

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/IPython/lib/pretty.py in _repr_pprint(obj, p, cycle)
    698     """A pprint that just redirects to the normal repr function."""
    699     # Find newlines and replace them with p.break_()
--> 700     output = repr(obj)
    701     lines = output.splitlines()
    702     with p.group():

~/Documents/GitHub/Python_Stack/django/django_orm/books_authors_proj/books_authors_app/models.py in __repr__(self)
     10         authorsList = ""
     11         for eachAuthor in self.Authors.all():
---> 12             authorsList = authorsList + ", " + eachAuthor
     13 
     14         return f"< ({self.id}) BOOK object: {self.title}, {self.description}, Authors:{authorsList}>"

TypeError: can only concatenate str (not "AUTHOR") to str

In [3]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
^[[APython 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: BOOK.objects.get(id=3)
Out[2]: < (3) BOOK object: Python, Book about Python, Authors:, Emily, Fyodor, Bill>

In [3]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
^[[APython 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: BOOK.objects.get(id=3)
Out[2]: ---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/IPython/core/formatters.py in __call__(self, obj)
    700                 type_pprinters=self.type_printers,
    701                 deferred_pprinters=self.deferred_printers)
--> 702             printer.pretty(obj)
    703             printer.flush()
    704             return stream.getvalue()

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/IPython/lib/pretty.py in pretty(self, obj)
    392                         if cls is not object \
    393                                 and callable(cls.__dict__.get('__repr__')):
--> 394                             return _repr_pprint(obj, self, cycle)
    395 
    396             return _default_pprint(obj, self, cycle)

~/Documents/GitHub/Python_Stack/my_environments/git_Django/lib/python3.9/site-packages/IPython/lib/pretty.py in _repr_pprint(obj, p, cycle)
    698     """A pprint that just redirects to the normal repr function."""
    699     # Find newlines and replace them with p.break_()
--> 700     output = repr(obj)
    701     lines = output.splitlines()
    702     with p.group():

~/Documents/GitHub/Python_Stack/django/django_orm/books_authors_proj/books_authors_app/models.py in __repr__(self)
     10         authorsList = ""
     11         for eachAuthor in self.Authors.all():
---> 12             authorsList = authorsList + ", " + eachAuthor.first_name + "(" + eachAuthor.id + ")"
     13 
     14         return f"< ({self.id}) BOOK object: {self.title}, {self.description}, Authors:{authorsList}>"

TypeError: can only concatenate str (not "int") to str

In [3]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
^[[APython 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: BOOK.objects.get(id=3)
Out[2]: < (3) BOOK object: Python, Book about Python, Authors:, Emily(2), Fyodor(3), Bill(4)>

In [3]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
^[[APython 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: BOOK.objects.get(id=3)
Out[2]: < (3) BOOK object: Python, Book about Python, Authors:Emily(2), Fyodor(3), Bill(4)>

In [3]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ python manage.py shell
Python 3.9.2 (default, Mar 26 2021, 23:22:38) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.23.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import *

In [2]: BOOK.objects.get(id=3)
Out[2]: < (3) BOOK object: Python, Book about Python, Authors: Emily(2), Fyodor(3), Bill(4)>

In [3]: book3 = BOOK.objects.get(id=3)

In [4]: book3.Authors.remove(AUTHOR.objects.get(id=2))

In [5]: book3
Out[5]: < (3) BOOK object: Python, Book about Python, Authors: Fyodor(3), Bill(4)>

In [6]: book2 = BOOK.objects.get(id=2)

In [7]: book3.save()

In [8]: BOOK.objects.get(id=3)
Out[8]: < (3) BOOK object: Python, Book about Python, Authors: Fyodor(3), Bill(4)>

In [9]: book2
Out[9]: < (2) BOOK object: Java, Book about Java, Authors: Jane(1), Emily(2), Fyodor(3), Bill(4)>

In [10]: book2.Authors.add(AUTHOR.objects.get(id=5))

In [11]: book2
Out[11]: < (2) BOOK object: Java, Book about Java, Authors: Jane(1), Emily(2), Fyodor(3), Bill(4), Lau(5)>

In [12]: BOOK.objects.get(id=2)
Out[12]: < (2) BOOK object: Java, Book about Java, Authors: Jane(1), Emily(2), Fyodor(3), Bill(4), Lau(5)>

In [13]: book2.save()

In [14]: BOOK.objects.filter(Authors = AUTHOR.objects.get(id=3))
Out[14]: <QuerySet [< (1) BOOK object: C#, Book about C Sharp, Authors: Jane(1), Emily(2), Fyodor(3), Bill(4)>, < (2) BOOK object: Java, Book about Java, Authors: Jane(1), Emily(2), Fyodor(3), Bill(4), Lau(5)>, < (3) BOOK object: Python, Book about Python, Authors: Fyodor(3), Bill(4)>, < (4) BOOK object: PHP, Book about PHP, Authors: Fyodor(3), Bill(4)>]>

In [15]: BOOK.objects.get(id=5).Authors.all()
Out[15]: <QuerySet [< (id4) AUTHOR object: Bill, Shakespeare, , Books: C#(1), Java(2), Python(3), PHP(4), Ruby(5)>]>

In [16]: BOOK.objects.get(id=3).Authors.all()
Out[16]: <QuerySet [< (id3) AUTHOR object: Fyodor, Dostoevsky, , Books: C#(1), Java(2), Python(3), PHP(4)>, < (id4) AUTHOR object: Bill, Shakespeare, , Books: C#(1), Java(2), Python(3), PHP(4), Ruby(5)>]>

In [17]: quit
(git_Django) MacBook-Pro:books_authors_proj tim$ 
